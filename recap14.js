/*
---- Terms
! post = สร้างข้อมูลใหม่ในฐานข้อมูล, บันทึกลงในบัญชี

/////////////////////////////////////////////////////////////
*                14. Sending Http Requests
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
-               179. Handling http errors
/////////////////////////////////////////////////////////////
---- Http status code
-- 401: Unauthorized and 403: Forbidden(ต้องห้าม) เป็น status code
.ที่ คำขอถูกส่งสำเร็จ ไม่มีปัญหาทางเทคนิค แต่ server ตอบกลับด้วย รหัสสถานะ
. 401 & 403 ทำให้เห็นว่า server ได้รับคำขอของคุณแล้ว แต่ไม่ต้องการให้การตอบ
.ที่คุณต้องการ ดังนั้นคุณจึงได้รับการตอบกลับที่ประสบความสำเร็จในทางเทคนิค(การเชื่อม
  .ต่ออินเตอร์เน็ตไม่มีปัญหา) 
-- 401, 404 เป็น unsuccessful status codes แต่การส่งคำขอ และการตอบกลับ
.สำเร็จแล้ว เพราะ มีการเชื่อมต่อ internet ที่ถูกต้อง กรณีนี้ เราต้อง จัดการ errors
.ด้วยตัวเอง โดยใช้ status variable or ok variable ที่มากับกับ วัตถุตอบ
.แต่ถ้าเราใช้ axios error status code จะเป็นข้อผิดพลาดจริง ซึ่งเราไม่ต้อง
.จัดการด้วยตัวเอง
-- 401, 403 เป็น รหัสสถานะที่ไม่สำเร็จ(unsuccessful status code) หรือ 
.รหัสสถานะผิดพลาด(error status code)
-- ok variable จะบอกว่า การตอบกลับ สำเร็จหรือไม่ => สำเร็จ = true, 
.ไม่สำเร็จ = false
-- เราสามารถใช้ error message ที่ได้รับจาก server ก็ได้ หรือ เราจะสร้าง
. error message ของเราเองก็ได้ โดย ใช้ throw new Error('my error messages')
' if (res.ok === false) throw new Error('Check url please') 


/////////////////////////////////////////////////////////////
-               182. Sending a post request
/////////////////////////////////////////////////////////////
---- การใช้ post method จะทำให้ backend สร้างข้อมูลในฐานข้อมูล แต่มันก็ไม่เสมอ
.ไป ขึ้นอยู่กับ backend ที่เราใช้ แต่สำหรับ firebase มันจะสร้างข้อมูลใหม่ในฐานข้อมูล
! post = สร้างข้อมูลใหม่ในฐานข้อมูล, บันทึกลงในบัญชี
-- การสร้างข้อมูลในฐานข้อมูล คือ การเก็บข้อมูลในฐานข้อมูลนั้นเอง

---- firebase ไม่ต้องการส่วน headers: {'Content-Type: 'application/json'} นี้
.ส่วนหัวนี้ใช้ อธิบายเนื้อหา
*/